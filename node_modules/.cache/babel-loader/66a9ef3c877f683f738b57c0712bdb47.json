{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\nconst usePut = ({\n  url,\n  payload\n}) => {\n  _s();\n\n  const apiUrl = window.siteSetting.dev ? window.siteSetting.testApiUrl : window.siteSetting.apiUrl;\n  const [res, setRes] = useState({\n    data: null,\n    isLoading: false,\n    error: null\n  });\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const callAPI = useCallback(() => {\n    setRes(prevState => ({ ...prevState,\n      isLoading: true\n    }));\n    const token = localStorage.getItem('Token');\n    axios.put(apiUrl + url, payload, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setRes({\n        data: response.data,\n        isLoading: false,\n        error: null\n      });\n      enqueueSnackbar('Update successful', {\n        variant: 'success'\n      });\n    }).catch(error => {\n      setRes({\n        data: null,\n        isLoading: false,\n        error\n      });\n      enqueueSnackbar('Update Error', {\n        variant: 'error'\n      });\n    });\n  }, [url, payload]);\n  return [res, callAPI];\n};\n\n_s(usePut, \"SPMnKiCQlVCgu/lZP9W0wIfdVjw=\", false, function () {\n  return [useSnackbar];\n});\n\nexport default usePut;","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI-f988824d18fbe1260d3a85c4dcd7902a93f4ed19/src/hooks/https/usePut.js"],"names":["useState","useCallback","axios","useSnackbar","usePut","url","payload","apiUrl","window","siteSetting","dev","testApiUrl","res","setRes","data","isLoading","error","enqueueSnackbar","callAPI","prevState","token","localStorage","getItem","put","headers","Authorization","then","response","variant","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAAA;;AACnC,QAAMC,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBC,GAAnB,GAAyBF,MAAM,CAACC,WAAP,CAAmBE,UAA5C,GAAyDH,MAAM,CAACC,WAAP,CAAmBF,MAA3F;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC;AAAEc,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,SAAS,EAAE,KAAzB;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GAAD,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAsBd,WAAW,EAAvC;AAEA,QAAMe,OAAO,GAAGjB,WAAW,CAAC,MAAM;AAChCY,IAAAA,MAAM,CAAEM,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBJ,MAAAA,SAAS,EAAE;AAA3B,KAAhB,CAAD,CAAN;AACA,UAAMK,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEApB,IAAAA,KAAK,CACFqB,GADH,CACOhB,MAAM,GAAGF,GADhB,EACqBC,OADrB,EAC8B;AAC1BkB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC;AADiB,KAD9B,EAIGM,IAJH,CAISC,QAAD,IAAc;AAClBd,MAAAA,MAAM,CAAC;AAAEC,QAAAA,IAAI,EAAEa,QAAQ,CAACb,IAAjB;AAAuBC,QAAAA,SAAS,EAAE,KAAlC;AAAyCC,QAAAA,KAAK,EAAE;AAAhD,OAAD,CAAN;AACAC,MAAAA,eAAe,CAAC,mBAAD,EAAsB;AACnCW,QAAAA,OAAO,EAAE;AAD0B,OAAtB,CAAf;AAGD,KATH,EAUGC,KAVH,CAUUb,KAAD,IAAW;AAChBH,MAAAA,MAAM,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,SAAS,EAAE,KAAzB;AAAgCC,QAAAA;AAAhC,OAAD,CAAN;AACAC,MAAAA,eAAe,CAAC,cAAD,EAAiB;AAC9BW,QAAAA,OAAO,EAAE;AADqB,OAAjB,CAAf;AAGD,KAfH;AAgBD,GApB0B,EAoBxB,CAACvB,GAAD,EAAMC,OAAN,CApBwB,CAA3B;AAqBA,SAAO,CAACM,GAAD,EAAMM,OAAN,CAAP;AACD,CA3BD;;GAAMd,M;UAGwBD,W;;;AA0B9B,eAAeC,MAAf","sourcesContent":["import { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\nconst usePut = ({ url, payload }) => {\n  const apiUrl = window.siteSetting.dev ? window.siteSetting.testApiUrl : window.siteSetting.apiUrl;\n  const [res, setRes] = useState({ data: null, isLoading: false, error: null });\n  const { enqueueSnackbar } = useSnackbar();\n\n  const callAPI = useCallback(() => {\n    setRes((prevState) => ({ ...prevState, isLoading: true }));\n    const token = localStorage.getItem('Token');\n\n    axios\n      .put(apiUrl + url, payload, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setRes({ data: response.data, isLoading: false, error: null });\n        enqueueSnackbar('Update successful', {\n          variant: 'success',\n        });\n      })\n      .catch((error) => {\n        setRes({ data: null, isLoading: false, error });\n        enqueueSnackbar('Update Error', {\n          variant: 'error',\n        });\n      });\n  }, [url, payload]);\n  return [res, callAPI];\n};\n\nexport default usePut;\n"]},"metadata":{},"sourceType":"module"}