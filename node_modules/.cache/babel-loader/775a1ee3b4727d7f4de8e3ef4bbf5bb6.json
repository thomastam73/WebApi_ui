{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\n\nconst useFetch = (initialUrl, skip = false) => {\n  _s();\n\n  const apiUrl = window.siteSetting.dev ? window.siteSetting.testApiUrl : window.siteSetting.apiUrl;\n  const [url] = useState(apiUrl + initialUrl); // const [params] = useState(initialParams);\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (skip) return;\n      setIsLoading(true);\n\n      try {\n        const token = localStorage.getItem('Token');\n        const response = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const result = await response.data;\n\n        if (result) {\n          setData(result);\n        } else {\n          setHasError(true);\n          setErrorMessage(result);\n        }\n      } catch (err) {\n        setHasError(true);\n        setErrorMessage(err.message);\n        enqueueSnackbar('Get Data Error', {\n          variant: 'error'\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    hasError,\n    errorMessage\n  };\n};\n\n_s(useFetch, \"bWyKDESmlYe6wEwgwK2bQ1w7xho=\", false, function () {\n  return [useSnackbar];\n});\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI-f988824d18fbe1260d3a85c4dcd7902a93f4ed19/src/hooks/https/useFetch.js"],"names":["useState","useEffect","useSnackbar","axios","useFetch","initialUrl","skip","apiUrl","window","siteSetting","dev","testApiUrl","url","data","setData","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","enqueueSnackbar","fetchData","token","localStorage","getItem","response","get","headers","Authorization","result","err","message","variant"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,UAAD,EAAaC,IAAI,GAAG,KAApB,KAA8B;AAAA;;AAC7C,QAAMC,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBC,GAAnB,GAAyBF,MAAM,CAACC,WAAP,CAAmBE,UAA5C,GAAyDH,MAAM,CAACC,WAAP,CAAmBF,MAA3F;AACA,QAAM,CAACK,GAAD,IAAQZ,QAAQ,CAACO,MAAM,GAAGF,UAAV,CAAtB,CAF6C,CAG7C;;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAsBnB,WAAW,EAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,SAAS,GAAG,YAAY;AAC5B,UAAIhB,IAAJ,EAAU;AACVU,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,cAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAUf,GAAV,EAAe;AACpCgB,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASN,KAAM;AAAjC;AAD2B,SAAf,CAAvB;AAGA,cAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACb,IAA9B;;AACA,YAAIiB,MAAJ,EAAY;AACVhB,UAAAA,OAAO,CAACgB,MAAD,CAAP;AACD,SAFD,MAEO;AACLZ,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,UAAAA,eAAe,CAACU,MAAD,CAAf;AACD;AACF,OAZD,CAYE,OAAOC,GAAP,EAAY;AACZb,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,eAAe,CAACW,GAAG,CAACC,OAAL,CAAf;AACAX,QAAAA,eAAe,CAAC,gBAAD,EAAmB;AAChCY,UAAAA,OAAO,EAAE;AADuB,SAAnB,CAAf;AAGD,OAlBD,SAkBU;AACRjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAxBD;;AAyBAM,IAAAA,SAAS;AACV,GA3BQ,EA2BN,CAACV,GAAD,CA3BM,CAAT;AA4BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA,QAAnB;AAA6BE,IAAAA;AAA7B,GAAP;AACD,CAvCD;;GAAMf,Q;UAQwBF,W;;;AAgC9B,eAAeE,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\n\nconst useFetch = (initialUrl, skip = false) => {\n  const apiUrl = window.siteSetting.dev ? window.siteSetting.testApiUrl : window.siteSetting.apiUrl;\n  const [url] = useState(apiUrl + initialUrl);\n  // const [params] = useState(initialParams);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (skip) return;\n      setIsLoading(true);\n      try {\n        const token = localStorage.getItem('Token');\n        const response = await axios.get(url, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const result = await response.data;\n        if (result) {\n          setData(result);\n        } else {\n          setHasError(true);\n          setErrorMessage(result);\n        }\n      } catch (err) {\n        setHasError(true);\n        setErrorMessage(err.message);\n        enqueueSnackbar('Get Data Error', {\n          variant: 'error',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { data, isLoading, hasError, errorMessage };\n};\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}