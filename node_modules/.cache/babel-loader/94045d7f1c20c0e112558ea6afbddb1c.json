{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/Agile Develop/Project/302cem_covid19_app_ui/src/views/Client/ClientLocation/LocationCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport { Grid, makeStyles, CardHeader, Card, CardContent, Typography, Divider, Avatar } from '@material-ui/core';\ndayjs.locale('zh-hk');\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  mb3: {\n    marginBottom: '10px'\n  },\n  avatar: {\n    backgroundColor: 'white',\n    color: 'black'\n  }\n});\n\nfunction getHKDate(date) {\n  if (date === null) {\n    return '--';\n  }\n\n  return dayjs(date).format('YYYY-MM-DD');\n}\n\nfunction getStatusColor(date) {\n  const today = dayjs(new Date());\n  const endDate = dayjs(date);\n\n  if (endDate.isBefore(today)) {\n    return '#616161';\n  }\n\n  return '#B71C1C';\n}\n\nconst RuleCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    information\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      titleTypographyProps: {\n        variant: 'h6'\n      },\n      style: {\n        backgroundColor: getStatusColor(information.endDate),\n        color: 'white'\n      },\n      title: `${information.ruleName}`,\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"\",\n        src: information.imageUrl,\n        className: classes.avatar,\n        children: \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.mb3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: getHKDate(information.startDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: getHKDate(information.endDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: information.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RuleCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RuleCard;\nexport default RuleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RuleCard\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/Agile Develop/Project/302cem_covid19_app_ui/src/views/Client/ClientLocation/LocationCard.js"],"names":["React","dayjs","Grid","makeStyles","CardHeader","Card","CardContent","Typography","Divider","Avatar","locale","useStyles","root","width","bullet","display","margin","transform","mb3","marginBottom","avatar","backgroundColor","color","getHKDate","date","format","getStatusColor","today","Date","endDate","isBefore","RuleCard","props","classes","information","variant","ruleName","imageUrl","startDate","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,OAPF,EAQEC,MARF,QASO,mBATP;AAWAR,KAAK,CAACS,MAAN,CAAa,OAAb;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJmB;AAS3BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX,GATsB;AAY3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,OADX;AAENC,IAAAA,KAAK,EAAE;AAFD;AAZmB,CAAD,CAA5B;;AAkBA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AACD,SAAOvB,KAAK,CAACuB,IAAD,CAAL,CAAYC,MAAZ,CAAmB,YAAnB,CAAP;AACD;;AAED,SAASC,cAAT,CAAwBF,IAAxB,EAA8B;AAC5B,QAAMG,KAAK,GAAG1B,KAAK,CAAC,IAAI2B,IAAJ,EAAD,CAAnB;AACA,QAAMC,OAAO,GAAG5B,KAAK,CAACuB,IAAD,CAArB;;AACA,MAAIK,OAAO,CAACC,QAAR,CAAiBH,KAAjB,CAAJ,EAA6B;AAC3B,WAAO,SAAP;AACD;;AACD,SAAO,SAAP;AACD;;AACD,MAAMI,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAAkBF,KAAxB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACrB,IAAzB;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,oBAAoB,EAAE;AAAEuB,QAAAA,OAAO,EAAE;AAAX,OADxB;AAEE,MAAA,KAAK,EAAE;AAAEd,QAAAA,eAAe,EAAEK,cAAc,CAACQ,WAAW,CAACL,OAAb,CAAjC;AAAwDP,QAAAA,KAAK,EAAE;AAA/D,OAFT;AAGE,MAAA,KAAK,EAAG,GAAEY,WAAW,CAACE,QAAS,EAHjC;AAIE,MAAA,MAAM,eACJ,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,EAAZ;AAAe,QAAA,GAAG,EAAEF,WAAW,CAACG,QAAhC;AAA0C,QAAA,SAAS,EAAEJ,OAAO,CAACb,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,WAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAEa,OAAO,CAACf,GAA/C;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,sBAA6BK,SAAS,CAACW,WAAW,CAACI,SAAb;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,sBAA6Bf,SAAS,CAACW,WAAW,CAACL,OAAb;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,kCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAAA,sBAA+BK,WAAW,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CApCD;;GAAMR,Q;UACYpB,S;;;KADZoB,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport {\n  Grid,\n  makeStyles,\n  CardHeader,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Avatar,\n} from '@material-ui/core';\n\ndayjs.locale('zh-hk');\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  mb3: {\n    marginBottom: '10px',\n  },\n  avatar: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n});\n\nfunction getHKDate(date) {\n  if (date === null) {\n    return '--';\n  }\n  return dayjs(date).format('YYYY-MM-DD');\n}\n\nfunction getStatusColor(date) {\n  const today = dayjs(new Date());\n  const endDate = dayjs(date);\n  if (endDate.isBefore(today)) {\n    return '#616161';\n  }\n  return '#B71C1C';\n}\nconst RuleCard = (props) => {\n  const classes = useStyles();\n  const { information } = props;\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        titleTypographyProps={{ variant: 'h6' }}\n        style={{ backgroundColor: getStatusColor(information.endDate), color: 'white' }}\n        title={`${information.ruleName}`}\n        avatar={\n          <Avatar alt=\"\" src={information.imageUrl} className={classes.avatar}>\n            --\n          </Avatar>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Grid container spacing={2} className={classes.mb3}>\n          <Grid item xs={6}>\n            <Typography variant=\"caption\">Start Date</Typography>\n            <Typography variant=\"body2\">{getHKDate(information.startDate)}</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"caption\">End Date</Typography>\n            <Typography variant=\"body2\">{getHKDate(information.endDate)}</Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Divider />\n            <Typography variant=\"caption\">{information.description}</Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RuleCard;\n"]},"metadata":{},"sourceType":"module"}