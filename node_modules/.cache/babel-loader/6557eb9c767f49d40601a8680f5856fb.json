{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/Agile Develop/Project/302cem_covid19_app_ui/src/views/Client/ClientArea/ClientArea.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CircularProgress, Grid, Typography } from '@material-ui/core';\nimport dayjs from 'dayjs'; // fontawesome\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'; // hook\n\nimport { useFetch } from '../../../hooks'; // component\n\nimport AreaCard from './AreaCard';\ndayjs.locale('zh-hk');\n\nconst getDiffDays = date => {\n  const today = dayjs(new Date());\n  const lastDate = dayjs(date);\n  return today.diff(lastDate, 'day');\n};\n\nconst noCasesMessage = count => {\n  return count === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    children: \"No any cases in 14 days.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : '';\n};\n\nconst ClientArea = () => {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useFetch('/areas');\n  const riskAreaList = data.map(information => {\n    if (getDiffDays(information.lastDate) <= 14) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(AreaCard, {\n          information: information\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, information._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faExclamationTriangle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), \" High Risk Areas / Buildings (14days)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [riskAreaList, noCasesMessage(data.length)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientArea, \"zLUFr8hynr8qeIIr5RD7fNeICnU=\", false, function () {\n  return [useFetch];\n});\n\n_c = ClientArea;\nexport default ClientArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientArea\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/Agile Develop/Project/302cem_covid19_app_ui/src/views/Client/ClientArea/ClientArea.js"],"names":["React","CircularProgress","Grid","Typography","dayjs","FontAwesomeIcon","faExclamationTriangle","useFetch","AreaCard","locale","getDiffDays","date","today","Date","lastDate","diff","noCasesMessage","count","ClientArea","data","isLoading","riskAreaList","map","information","_id","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,IAA3B,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,qBAAT,QAAsC,mCAAtC,C,CACA;;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEAJ,KAAK,CAACK,MAAN,CAAa,OAAb;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,QAAMC,KAAK,GAAGR,KAAK,CAAC,IAAIS,IAAJ,EAAD,CAAnB;AACA,QAAMC,QAAQ,GAAGV,KAAK,CAACO,IAAD,CAAtB;AACA,SAAOC,KAAK,CAACG,IAAN,CAAWD,QAAX,EAAqB,KAArB,CAAP;AACD,CAJD;;AAMA,MAAME,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAOA,KAAK,KAAK,CAAV,gBACL,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAKL,EALF;AAOD,CARD;;AAUA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBb,QAAQ,CAAC,QAAD,CAApC;AAEA,QAAMc,YAAY,GAAGF,IAAI,CAACG,GAAL,CAAUC,WAAD,IAAiB;AAC7C,QAAIb,WAAW,CAACa,WAAW,CAACT,QAAb,CAAX,IAAqC,EAAzC,EAA6C;AAC3C,0BACE,QAAC,IAAD;AAA4B,QAAA,IAAI,MAAhC;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAyC,QAAA,EAAE,EAAE,CAA7C;AAAgD,QAAA,EAAE,EAAE,CAApD;AAAuD,QAAA,EAAE,EAAE,CAA3D;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,WAAW,EAAES;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF,SAAWA,WAAW,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,WAAO,IAAP;AACD,GAToB,CAArB;AAWA,sBACE;AAAA,cACGJ,SAAS,gBACR,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,MAAlC;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,qBACGe,YADH,EAEGL,cAAc,CAACG,IAAI,CAACM,MAAN,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCD;;GAAMP,U;UACwBX,Q;;;KADxBW,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { CircularProgress, Grid, Typography } from '@material-ui/core';\nimport dayjs from 'dayjs';\n// fontawesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n// hook\nimport { useFetch } from '../../../hooks';\n// component\nimport AreaCard from './AreaCard';\n\ndayjs.locale('zh-hk');\n\nconst getDiffDays = (date) => {\n  const today = dayjs(new Date());\n  const lastDate = dayjs(date);\n  return today.diff(lastDate, 'day');\n};\n\nconst noCasesMessage = (count) => {\n  return count === 0 ? (\n    <Grid item xs={12}>\n      No any cases in 14 days.\n    </Grid>\n  ) : (\n    ''\n  );\n};\n\nconst ClientArea = () => {\n  const { data, isLoading } = useFetch('/areas');\n\n  const riskAreaList = data.map((information) => {\n    if (getDiffDays(information.lastDate) <= 14) {\n      return (\n        <Grid key={information._id} item xs={12} sm={6} md={4} lg={3}>\n          <AreaCard information={information} />\n        </Grid>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" paragraph>\n              <FontAwesomeIcon icon={faExclamationTriangle} /> High Risk Areas / Buildings (14days)\n            </Typography>\n            <Grid container spacing={3}>\n              {riskAreaList}\n              {noCasesMessage(data.length)}\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default ClientArea;\n"]},"metadata":{},"sourceType":"module"}