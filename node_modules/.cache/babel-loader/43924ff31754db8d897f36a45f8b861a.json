{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI-f988824d18fbe1260d3a85c4dcd7902a93f4ed19/src/views/Client/ClientSignLanguage/ClientSignLanguage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CircularProgress, Grid, Typography, Divider, makeStyles, Button } from \"@material-ui/core\"; // hook\n\nimport { useFetch } from \"../../../hooks\"; // component\n\nimport SignLanguagCard from \"./SignLanguagCard\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: \"bold\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst ClientSignLanguages = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/signLanguages/group\");\n  const [district, setDistrict] = React.useState(\"US\");\n\n  const onClick = district => {\n    setDistrict(district);\n  };\n\n  const filterController = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      className: classes.button,\n      onClick: () => onClick(\"US\"),\n      children: \"US\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: () => onClick(\"Hong Kong\"),\n      children: \"Hong Kong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  const filterSignLanguageList = district => {\n    if (district === \"US\") {\n      return data.filter(information => information._id === \"US\").map(information => /*#__PURE__*/_jsxDEV(SignLanguagCard, {\n        information: information.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this));\n    } else if (district === \"Hong Kong\") {\n      return data.filter(information => information._id === \"HongKong\").map(information => /*#__PURE__*/_jsxDEV(SignLanguagCard, {\n        information: information.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        className: classes.title,\n        children: \"Sign Language Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      flexGrow: \"1\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        children: filterController\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        className: classes.title,\n        children: district\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filterSignLanguageList(district)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientSignLanguages, \"tW/9r99dNKdFXFcNPWCiCuMYtmM=\", false, function () {\n  return [useStyles, useFetch];\n});\n\n_c = ClientSignLanguages;\nexport default ClientSignLanguages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientSignLanguages\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI-f988824d18fbe1260d3a85c4dcd7902a93f4ed19/src/views/Client/ClientSignLanguage/ClientSignLanguage.js"],"names":["React","CircularProgress","Grid","Typography","Divider","makeStyles","Button","useFetch","SignLanguagCard","useStyles","theme","title","fontWeight","formControl","margin","spacing","minWidth","selectEmpty","marginTop","button","ClientSignLanguages","classes","data","isLoading","district","setDistrict","useState","onClick","filterController","filterSignLanguageList","filter","information","_id","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  Typography,\n  Divider,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\n\n// hook\nimport { useFetch } from \"../../../hooks\";\n// component\nimport SignLanguagCard from \"./SignLanguagCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: \"bold\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ClientSignLanguages = () => {\n  const classes = useStyles();\n  const { data, isLoading } = useFetch(\"/signLanguages/group\");\n  const [district, setDistrict] = React.useState(\"US\");\n\n  const onClick = (district) => {\n    setDistrict(district);\n  };\n\n  const filterController = (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        className={classes.button}\n        onClick={() => onClick(\"US\")}\n      >\n        US\n      </Button>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={() => onClick(\"Hong Kong\")}\n      >\n        Hong Kong\n      </Button>\n    </div>\n  );\n\n  const filterSignLanguageList = (district) => {\n    if (district === \"US\") {\n      return data\n        .filter((information) => information._id === \"US\")\n        .map((information) => (\n          <SignLanguagCard information={information.data} />\n        ));\n    } else if (district === \"Hong Kong\") {\n      return data\n        .filter((information) => information._id === \"HongKong\")\n        .map((information) => (\n          <SignLanguagCard information={information.data} />\n        ));\n    }\n  };\n\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" align=\"center\" className={classes.title}>\n          Sign Language Dictionary\n        </Typography>\n        <Divider />\n      </Grid>\n      <Grid container spacing={3} flexGrow=\"1\">\n        <Grid item xs={12} md={12}>\n          {filterController}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n          {district}\n        </Typography>\n      </Grid>\n      {isLoading ? (\n        <Grid item xs={12}>\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <Grid container spacing={3}>\n          {filterSignLanguageList(district)}\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default ClientSignLanguages;\n"]},"metadata":{},"sourceType":"module"}