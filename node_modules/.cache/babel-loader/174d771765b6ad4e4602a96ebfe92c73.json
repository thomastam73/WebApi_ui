{"ast":null,"code":"// Define our labelmap\nconst labelMap = {\n  1: {\n    name: \"zero\",\n    color: \"red\"\n  },\n  2: {\n    name: \"one\",\n    color: \"yellow\"\n  },\n  3: {\n    name: \"two\",\n    color: \"lime\"\n  },\n  4: {\n    name: \"three\",\n    color: \"blue\"\n  },\n  5: {\n    name: \"four\",\n    color: \"purple\"\n  },\n  6: {\n    name: \"five\",\n    color: \"black\"\n  },\n  7: {\n    name: \"six\",\n    color: \"pink\"\n  },\n  8: {\n    name: \"seven\",\n    color: \"gray\"\n  },\n  9: {\n    name: \"eight\",\n    color: \"purple\"\n  },\n  10: {\n    name: \"nine\",\n    color: \"purple\"\n  },\n  11: {\n    name: \"ten\",\n    color: \"purple\"\n  }\n}; // Define a drawing function\n\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx) => {\n  for (let i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      // Extract variables\n      const [y, x, height, width] = boxes[i];\n      const text = classes[i];\n      ctx.strokeStyle = labelMap[text][\"color\"];\n      ctx.lineWidth = 10;\n      ctx.fillStyle = \"white\";\n      ctx.font = \"30px Arial\";\n      ctx.beginPath();\n      ctx.fillText(labelMap[text][\"name\"] + \" - \" + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10);\n      ctx.rect(x * imgWidth, y * imgHeight, width * imgWidth / 2, height * imgHeight / 1.5);\n      ctx.stroke();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI-f988824d18fbe1260d3a85c4dcd7902a93f4ed19/src/views/Client/ClientDashboard/utilities.js"],"names":["labelMap","name","color","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;AACf,KAAG;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADY;AAEf,KAAG;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAFY;AAGf,KAAG;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAHY;AAIf,KAAG;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAJY;AAKf,KAAG;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALY;AAMf,KAAG;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANY;AAOf,KAAG;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAPY;AAQf,KAAG;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GARY;AASf,KAAG;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GATY;AAUf,MAAI;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAVW;AAWf,MAAI;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB;AAXW,CAAjB,C,CAcA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,KADsB,EAEtBC,OAFsB,EAGtBC,MAHsB,EAItBC,SAJsB,EAKtBC,QALsB,EAMtBC,SANsB,EAOtBC,GAPsB,KAQnB;AACH,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,KAAK,CAACQ,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIP,KAAK,CAACO,CAAD,CAAL,IAAYN,OAAO,CAACM,CAAD,CAAnB,IAA0BL,MAAM,CAACK,CAAD,CAAN,GAAYJ,SAA1C,EAAqD;AACnD;AACA,YAAM,CAACM,CAAD,EAAIC,CAAJ,EAAOC,MAAP,EAAeC,KAAf,IAAwBZ,KAAK,CAACO,CAAD,CAAnC;AACA,YAAMM,IAAI,GAAGZ,OAAO,CAACM,CAAD,CAApB;AAEAD,MAAAA,GAAG,CAACQ,WAAJ,GAAkBlB,QAAQ,CAACiB,IAAD,CAAR,CAAe,OAAf,CAAlB;AACAP,MAAAA,GAAG,CAACS,SAAJ,GAAgB,EAAhB;AACAT,MAAAA,GAAG,CAACU,SAAJ,GAAgB,OAAhB;AACAV,MAAAA,GAAG,CAACW,IAAJ,GAAW,YAAX;AAEAX,MAAAA,GAAG,CAACY,SAAJ;AACAZ,MAAAA,GAAG,CAACa,QAAJ,CACEvB,QAAQ,CAACiB,IAAD,CAAR,CAAe,MAAf,IAAyB,KAAzB,GAAiCO,IAAI,CAACC,KAAL,CAAWnB,MAAM,CAACK,CAAD,CAAN,GAAY,GAAvB,IAA8B,GADjE,EAEEG,CAAC,GAAGN,QAFN,EAGEK,CAAC,GAAGJ,SAAJ,GAAgB,EAHlB;AAKAC,MAAAA,GAAG,CAACgB,IAAJ,CACEZ,CAAC,GAAGN,QADN,EAEEK,CAAC,GAAGJ,SAFN,EAGGO,KAAK,GAAGR,QAAT,GAAqB,CAHvB,EAIGO,MAAM,GAAGN,SAAV,GAAuB,GAJzB;AAMAC,MAAAA,GAAG,CAACiB,MAAJ;AACD;AACF;AACF,CAnCM","sourcesContent":["// Define our labelmap\nconst labelMap = {\n  1: { name: \"zero\", color: \"red\" },\n  2: { name: \"one\", color: \"yellow\" },\n  3: { name: \"two\", color: \"lime\" },\n  4: { name: \"three\", color: \"blue\" },\n  5: { name: \"four\", color: \"purple\" },\n  6: { name: \"five\", color: \"black\" },\n  7: { name: \"six\", color: \"pink\" },\n  8: { name: \"seven\", color: \"gray\" },\n  9: { name: \"eight\", color: \"purple\" },\n  10: { name: \"nine\", color: \"purple\" },\n  11: { name: \"ten\", color: \"purple\" },\n};\n\n// Define a drawing function\nexport const drawRect = (\n  boxes,\n  classes,\n  scores,\n  threshold,\n  imgWidth,\n  imgHeight,\n  ctx\n) => {\n  for (let i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      // Extract variables\n      const [y, x, height, width] = boxes[i];\n      const text = classes[i];\n\n      ctx.strokeStyle = labelMap[text][\"color\"];\n      ctx.lineWidth = 10;\n      ctx.fillStyle = \"white\";\n      ctx.font = \"30px Arial\";\n\n      ctx.beginPath();\n      ctx.fillText(\n        labelMap[text][\"name\"] + \" - \" + Math.round(scores[i] * 100) / 100,\n        x * imgWidth,\n        y * imgHeight - 10\n      );\n      ctx.rect(\n        x * imgWidth,\n        y * imgHeight,\n        (width * imgWidth) / 2,\n        (height * imgHeight) / 1.5\n      );\n      ctx.stroke();\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}